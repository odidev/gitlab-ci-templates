# Open an SCCB request issue.
# You must create a personal access token
# (https://git.ligo.org/profile/personal_access_tokens)
# with api scope and put its value in a
# protected CI variable called GITLAB_ACCESS_TOKEN.


sccb:
  image: python
  dependencies: []
  variables:
    GIT_STRATEGY: fetch
    PROJECT: sccb/requests
  script:
    - pip install pep517
    - VERSION="$(python -c 'from pep517.meta import load; print(load(".").version)')"
    - CHANGES_FILENAME="$(echo CHANGES.*)"
    - >
      LAST_VERSION="$(git tag -l |
      python -c 'from pkg_resources import parse_version;
      import sys;
      current_version = parse_version(sys.argv[1]);
      versions = [parse_version(line) for line in sys.stdin];
      print(max(v for v in versions if v < current_version)
      if versions else "")' "$VERSION")"
    - MAJOR_MINOR_VERSION=$(echo "$VERSION" | cut -d . -f 1,2)
    - PATCH_VERSION=$(echo "$VERSION" | cut -d . -f 3)
    - LAST_MAJOR_MINOR_VERSION=$(echo "$LAST_VERSION" | cut -d . -f 1,2)
    - TITLE="$CI_PROJECT_NAME-$VERSION"
    - >
      PROJECT_SLUG="$(
      python -c 'import urllib.parse, sys;
      print(urllib.parse.quote(sys.argv[1], safe=""))' "$PROJECT"
      )"
    - |
      cat > description <<EOF
      #### Details

      - **Package name:** $CI_PROJECT_NAME
      - **Version:** $VERSION
      - **Source:** https://pypi.org/packages/source/${CI_PROJECT_NAME:0:1}/$CI_PROJECT_NAME/$CI_PROJECT_NAME-$VERSION.tar.gz

      #### Description

      See [change log]($CI_PROJECT_URL/blob/v${VERSION}/${CHANGES_FILENAME}) and
      [diff from last release]($CI_PROJECT_URL/compare/v${LAST_VERSION}...v${VERSION}).

      #### Distributions

      Not applicable: this project uses [continuous deployment](https://gwcelery.readthedocs.io/en/latest/deployment.html#continuous-deployment).

      #### Request type

      Please select all of the following that apply:

      - [$(if [ -z "$LAST_MAJOR_MINOR_VERSION" ]; then echo 'X'; else echo ' '; fi)] this is a new package
      - [$(if [ -n "$LAST_MAJOR_MINOR_VERSION" -a "$MAJOR_MINOR_VERSION" = "$LAST_MAJOR_MINOR_VERSION" ]; then echo 'X'; else echo ' '; fi)] this is a backwards-compatible update
      - [$(if [ -n "$LAST_MAJOR_MINOR_VERSION" -a "$MAJOR_MINOR_VERSION" = "$LAST_MAJOR_MINOR_VERSION" ]; then echo ' '; else echo 'X'; fi)] this is a backwards-incompatible update [API/ABI changes]

      #### SCCB Voting

      <!-- DO NOT EDIT THIS SECTION -->

      SCCB members will here indicate their vote to approve the above request:

      - [ ] @sharon.brunett
      - [ ] @franco.carbognani
      - [ ] @james\-clark
      - [ ] @duncanmmacleod
      - [ ] @gregory.mendell
      - [ ] @adam\-mercer
      - [ ] @jameson.rollins
      EOF
    - echo $TITLE
    - cat description
    # If this build is for a tag, then create the issue.
    - |
      if [ -n "$CI_COMMIT_TAG" ] && [[ $PATCH_VERSION =~ ^[0-9]+$ ]]
      then
        curl --silent --show-error --fail \
        --request POST --header "Private-Token: $GITLAB_ACCESS_TOKEN" \
        --data-urlencode "title=$TITLE" \
        --data-urlencode "description@description" \
        "$CI_API_V4_URL/projects/$PROJECT_SLUG/issues"
      fi
